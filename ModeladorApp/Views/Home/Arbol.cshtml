@model IEnumerable<ModeladorApp.Models.Entities.TB_PERMISOS>
<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=ISO-8859-1" />

    <title>ON - Modelador Web</title>

    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jquery.fancytree/2.38.0/skin-awesome/ui.fancytree.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jquery.fancytree/2.38.0/skin-bootstrap-n/ui.fancytree.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jquery.fancytree/2.38.0/skin-bootstrap/ui.fancytree.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jquery.fancytree/2.38.0/skin-xp/ui.fancytree.min.css">

    @*<script src="//code.jquery.com/jquery-3.6.0.min.js"></script>*@
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.js"></script>
    <!-- This demo uses an 3rd-party, jQuery UI based context menu -->
    <link href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css" rel="stylesheet" />
    <script src="//code.jquery.com/ui/1.12.1/jquery-ui.min.js"></script>
    <!-- jquery-contextmenu (https://github.com/mar10/jquery-ui-contextmenu/) -->
    <script src="//cdn.jsdelivr.net/npm/ui-contextmenu/jquery.ui-contextmenu.min.js"></script>

    <style type="text/css">
        .ui-menu {
            width: 180px;
            font-size: 63%;
        }

            .ui-menu kbd {
                /* Keyboard shortcuts for ui-contextmenu titles */
                float: right;
            }
        /* custom alignment (set by 'renderColumns'' event) */
        td.alignRight {
            text-align: right;
        }

        td.alignCenter {
            text-align: center;
        }

        td input[type="input"] {
            width: 40px;
        }
    </style>

    <script type="text/javascript">

        window.onload = loadTree();

        var CLIPBOARD = null;
        var tempPyId; // servirá para deshacernos de la vista del proyecto.

        async function loadTree(vIdProject) {

            var treeReach; //la que rendizará los datos en la tabla.
            var data; // la que contendra la data de la función asyncrona.

            console.log(tempPyId + " var Temporal");

            if (typeof (vIdProject) === 'undefined' || vIdProject == 0) {

                data = await funGetMasterData()
                treeReach = "tree_0";

            } else {
                data = await funGetPyFromUsuario(vIdProject)
                treeReach = "tree_" + vIdProject;
            }
            //console.log(data);

            if (data.length >= 1) {

                if (typeof (vIdProject) === 'undefined' || vIdProject == 0) {

                    //console.log("id de proyecto indefinido---");

                    $("#proyecto_" + tempPyId).removeClass('active');
                    $('#proyecto_0').attr('class', "tab-pane active");

                    $("#loader_0").hide();
                }

                $(function () {

                    //$("#tree_" + tempPyId).fancytree("destroy"); // para destruir un FancyTree...

                    $("#" + treeReach).fancytree({

                        titlesTabbable: true, // Add all node titles to TAB chain
                        quicksearch: true, // Jump to nodes when pressing first character
                        source: data,
                        // Llamada cada vez que se expande un nodo LAZY.
                        lazyLoad: function (event, data) {

                            var node = data.node;     //obtenemos el nodo
                            /*console.log(node.data.id);*/ // obtenemos el id para mandarlo como parent

                            console.log(node.data.parentId)

                            data.result = {
                                url: "/Home/funGetSubLvls",
                                data: { parent: node.data.id },
                                cache: false
                            };

                        },
                        /* AJAX: Ejemplo 1*/
                        //---------------------------------------
                        //source: $.ajax({
                        //    dataType: "json",
                        //    url: "/Home/funGetLvl",
                        //    success: function (data) {
                        //        //console.log(data)
                        //    }
                        //}),
                        //--------------------------------------
                        /* AJAX: Ejemplo 2*/
                        //-------------------------------------- key seria el ID
                        //source: {
                        //    url: "/Home/funGetMaster",
                        //    data: { key: 01 },
                        //    cache: false
                        //},

                        extensions: ["edit", "dnd5", "table", "gridnav"],

                        dnd5: {
                            preventVoidMoves: true,
                            preventRecursion: true,
                            autoExpandMS: 400,
                            dragStart: function (node, data) {


                                //function saveData(node.data.id);

                                return true;
                            },
                            dragEnter: function (node, data) {
                                // return ["before", "after"];
                                return true;
                            },
                            dragDrop: function (node, data) {
                                data.otherNode.moveTo(node, data.hitMode);
                            },
                        },
                        edit: {
                            triggerStart: ["f2", "shift+click", "mac+enter"],
                            close: function (event, data) {
                                if (data.save && data.isNew) {
                                    // Quick-enter: add new nodes until we hit [enter] on an empty title
                                    $("#tree").trigger("nodeCommand", {
                                        cmd: "addSibling",
                                    });
                                }
                            },
                        },
                        table: {
                            indentation: 20,
                            nodeColumnIdx: 1,
                            //checkboxColumnIdx: 0, //para poner checkboxes en la columna 1
                        },
                        gridnav: {
                            autofocusInput: false,
                            handleCursorKeys: true,
                        },
                        createNode: function (event, data) {
                            var node = data.node,
                                $tdList = $(node.tr).find(">td");

                            // Span the remaining columns if it's a folder.
                            // We can do this in createNode instead of renderColumns, because
                            // the `isFolder` status is unlikely to change later
                            if (node.isFolder()) {
                                $tdList
                                    .eq(2)
                                    .prop("colspan", 6)
                                    .nextAll()
                                    .remove();
                            }
                        },
                        renderColumns: function (event, data) {
                            var node = data.node,
                                $tdList = $(node.tr).find(">td");

                            // (Index #0 is rendered by fancytree by adding the checkbox)
                            // Set column #1 info from node data:
                            $tdList.eq(0).text(node.getIndexHier());
                            // (Index #2 is rendered by fancytree)
                            // Podemos setear la información en la columna 2 como por ejemplo el parentId
                            $tdList
                                .eq(2)
                                .find("input")
                                .val(node.data.subtitle);

                            $tdList
                                .eq(4)
                                .find("input")
                                .val(node.data.foo);

                            // Static markup (more efficiently defined as html row template):
                            // $tdList.eq(3).html("<input type='input' value='"  "" + "'>");
                            // ...
                        },
                        modifyChild: function (event, data) {
                            data.tree.info(event.type, data);
                        },
                    })
                        .on("nodeCommand", function (event, data) {
                            // Custom event handler that is triggered by keydown-handler and
                            // context menu:
                            var refNode,
                                moveMode,
                                tree = $.ui.fancytree.getTree(this),
                                node = tree.getActiveNode();

                            switch (data.cmd) {
                                case "addChild":
                                case "addSibling":
                                case "indent":
                                case "moveDown":
                                case "moveUp":
                                case "outdent":
                                case "remove":
                                case "rename":
                                    tree.applyCommand(data.cmd, node);
                                    break;
                                case "cut":
                                    CLIPBOARD = { mode: data.cmd, data: node };
                                    break;
                                case "copy":
                                    CLIPBOARD = {
                                        mode: data.cmd,
                                        data: node.toDict(true, function (dict, node) {
                                            delete dict.key;
                                        }),
                                    };
                                    break;
                                case "clear":
                                    CLIPBOARD = null;
                                    break;
                                case "paste":
                                    if (CLIPBOARD.mode === "cut") {
                                        // refNode = node.getPrevSibling();
                                        CLIPBOARD.data.moveTo(node, "child");
                                        CLIPBOARD.data.setActive();
                                    } else if (CLIPBOARD.mode === "copy") {
                                        node.addChildren(
                                            CLIPBOARD.data
                                        ).setActive();
                                    }
                                    break;
                                default:
                                    alert("Unhandled command: " + data.cmd);
                                    return;
                            }
                        })
                        .on("keydown", function (e) {
                            var cmd = null;

                            // console.log(e.type, $.ui.fancytree.eventToString(e));
                            switch ($.ui.fancytree.eventToString(e)) {
                                case "ctrl+shift+n":
                                case "meta+shift+n": // mac: cmd+shift+n
                                    cmd = "addChild";
                                    break;
                                case "ctrl+c":
                                case "meta+c": // mac
                                    cmd = "copy";
                                    break;
                                case "ctrl+v":
                                case "meta+v": // mac
                                    cmd = "paste";
                                    break;
                                case "ctrl+x":
                                case "meta+x": // mac
                                    cmd = "cut";
                                    break;
                                case "ctrl+n":
                                case "meta+n": // mac
                                    cmd = "addSibling";
                                    break;
                                case "del":
                                case "meta+backspace": // mac
                                    cmd = "remove";
                                    break;
                                // case "f2":  // already triggered by ext-edit pluging
                                //   cmd = "rename";
                                //   break;
                                case "ctrl+up":
                                case "ctrl+shift+up": // mac
                                    cmd = "moveUp";
                                    break;
                                case "ctrl+down":
                                case "ctrl+shift+down": // mac
                                    cmd = "moveDown";
                                    break;
                                case "ctrl+right":
                                case "ctrl+shift+right": // mac
                                    cmd = "indent";
                                    break;
                                case "ctrl+left":
                                case "ctrl+shift+left": // mac
                                    cmd = "outdent";
                            }
                            if (cmd) {
                                $(this).trigger("nodeCommand", { cmd: cmd });
                                return false;
                            }
                        });

                    /*
                     * Tooltips
                     */
                    // $("#tree").tooltip({
                    //   content: function () {
                    //     return $(this).attr("title");
                    //   }
                    // });

                    /*
                     * Context menu (https://github.com/mar10/jquery-ui-contextmenu)
                     */
                    $("#" + treeReach).contextmenu({
                        delegate: "span.fancytree-node",
                        menu: [
                            {
                                title: "Editar <kbd>[F2]</kbd>",
                                cmd: "rename",
                                uiIcon: "ui-icon-pencil",
                            },
                            {
                                title: "Eliminar <kbd>[Del]</kbd>",
                                cmd: "remove",
                                uiIcon: "ui-icon-trash",
                            },
                            { title: "----" },
                            {
                                title: "Nvo Hermano <kbd>[Ctrl+N]</kbd>",
                                cmd: "addSibling",
                                uiIcon: "ui-icon-plus",
                            },
                            {
                                title: "Nvo Hijo <kbd>[Ctrl+Shift+N]</kbd>",
                                cmd: "addChild",
                                uiIcon: "ui-icon-arrowreturn-1-e",
                            },
                            { title: "----" },
                            {
                                title: "Cortar <kbd>Ctrl+X</kbd>",
                                cmd: "cut",
                                uiIcon: "ui-icon-scissors",
                            },
                            {
                                title: "Copiar <kbd>Ctrl-C</kbd>",
                                cmd: "copy",
                                uiIcon: "ui-icon-copy",
                            },
                            {
                                title: "Pegar as child<kbd>Ctrl+V</kbd>",
                                cmd: "paste",
                                uiIcon: "ui-icon-clipboard",
                                disabled: true,
                            },
                        ],
                        beforeOpen: function (event, ui) {
                            var node = $.ui.fancytree.getNode(ui.target);
                            $("#" + treeReach).contextmenu(
                                "enableEntry",
                                "paste",
                                !!CLIPBOARD
                            );
                            node.setActive();
                        },
                        select: function (event, ui) {
                            var that = this;
                            // delay the event, so the menu can close and the click event does
                            // not interfere with the edit control
                            setTimeout(function () {
                                $(that).trigger("nodeCommand", { cmd: ui.cmd });
                            }, 100);
                        },
                    });

                }); //---------> End Fancytree..

            } else {

                //console.log("proyecto de usuario");
                tempPyId = vIdProject;

                $("#loader_" + vIdProject).hide();

            } //--------> End If
        }

        //---------------- carga de proyecto MASTER
        function funGetMasterData() {
            var url = "/Home/funGetLvl";
            return $.get(url, {}, function (data) {
                //console.log(data);
            });
        };

        //---------------- carga de proyecto de Usuario...
        function funGetPyFromUsuario(vIdProject) {
            var url = "/Home/funGetLvlFromPyUsuario";
            return $.get(url, { idProyecto: vIdProject }, function (data) {
                //console.log(data);
            });
        };

        function expandOrContract(vIdProyecto) {

            $("#tree_" + vIdProyecto).fancytree("getRootNode").visit(function (node) {
                if (node.isExpanded() == true) {
                    node.setExpanded(false);
                } else {
                    node.setExpanded(true);
                }
            });
        }

    </script>
</head>

<body class="example">

    <ul class="nav nav-tabs nav-fill" data-bs-toggle="tabs">

        <li class="nav-item">
            <a href="#master" onclick="loadTree(0)" class="nav-link active"
               data-bs-toggle="tab"><strong>MASTER</strong></a>
        </li>

        @foreach (var item in Model)
        {
            <li class="nav-item">
                <a href="#proyecto_@item.ProyectoID" onclick="loadTree('@item.ProyectoID')" class="nav-link"
                   data-bs-toggle="tab">@Html.DisplayFor(modelItem => item.TB_PROYECTO.NombreProyecto)</a>
            </li>
        }

    </ul>

    <div class="card">

        @*Loader*@
        <div class="card-body" id="loader_0">
            <div class="empty">
                <div class="empty-img">
                    <img src="https://miro.medium.com/max/875/1*CsJ05WEGfunYMLGfsT2sXA.gif" height="128">
                </div>
                <p class="empty-title">Cargando "MASTER"</p>
            </div>
        </div>
        @*Loader*@

        <div class="tab-content">

            <div class="tab-pane" id="proyecto_0">

                <div class="row align-items-center">
                    <div class="col-auto ms-auto d-print-none">
                        <div class="btn-list">
                            <span class="d-none d-sm-inline">
                                <a onclick="expandOrContract(0)" class="btn btn-secondary">
                                    Expandir/Contraer
                                </a>
                            </span>

                            <span class="d-none d-sm-inline">
                                <a href="#" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#modal-new-project">
                                    Clonar
                                </a>
                            </span>

                        </div>
                    </div>
                </div>

                <table id="tree_0">
                    <colgroup>
                        <col width="2%" />
                        <col width="33%" />
                        <col width="30px" />
                        <col width="30px" />
                        <col width="30px" />
                        <col width="30px" />
                        <col width="30px" />
                        <col width="50px" />
                        <col width="50px" />
                        <col width="50px" />
                        <col width="50px" />
                        <col width="50px" />
                    </colgroup>
                    <thead>
                        <tr>
                            <th>#</th>
                            <th>Identificador</th>
                            <th>Nombre</th>
                            <th>2</th>
                            <th>3</th>
                            <th>4</th>
                            <th>5</th>

                        </tr>
                    </thead>
                    <tbody>
                        <!-- Define a row template for all invariant markup: -->
                        <tr>
                            <td></td>
                            <td><input name="" style="width:44%" /></td>
                            <td><input name="" /></td>
                            <td><input name="" /></td>
                            <td><input name="" /></td>
                            <td><input name="" /></td>
                            <td><input name="" /></td>
                        </tr>
                    </tbody>
                </table>

            </div>

            @foreach (var item in Model)
            {
                <div class="tab-pane" id="proyecto_@item.ProyectoID">

                    <div class="row align-items-center">
                        <div class="col-auto ms-auto d-print-none">
                            <div class="btn-list">
                                <span class="d-none d-sm-inline">
                                    <a onclick="expandOrContract(@item.ProyectoID)" class="btn btn-secondary">
                                        Expandir/Contraer
                                    </a>
                                </span>
                                @if (item.Permiso == "EDITOR")
                                {
                                    <span class="d-none d-sm-inline">
                                        <a href="#" class="btn btn-primary">
                                            Editar
                                        </a>
                                    </span>
                                }
                            </div>
                        </div>
                    </div>

                    <div class="empty" id="loader_@item.ProyectoID" style="display:none">
                        <div class="empty-img">
                            <img src="https://miro.medium.com/max/875/1*CsJ05WEGfunYMLGfsT2sXA.gif" height="128">
                        </div>
                        <p class="empty-title">Cargando "@item.TB_PROYECTO.NombreProyecto"</p>
                    </div>


                    <table id="tree_@item.ProyectoID">
                        <colgroup>
                            <col width="2%" />
                            <col width="33%" />
                            <col width="30px" />
                            <col width="30px" />
                            <col width="30px" />
                            <col width="30px" />
                            <col width="30px" />
                            <col width="50px" />
                            <col width="50px" />
                            <col width="50px" />
                            <col width="50px" />
                            <col width="50px" />
                        </colgroup>
                        <thead>
                            <tr>
                                <th>#</th>
                                <th>Identificador</th>
                                <th>Nombre</th>
                                <th>2</th>
                                <th>3</th>
                                <th>4</th>
                                <th>5</th>

                            </tr>
                        </thead>
                        <tbody>
                            <!-- Define a row template for all invariant markup: -->
                            <tr>
                                <td></td>
                                <td><input name="" style="width:44%" /></td>
                                <td><input name="" /></td>
                                <td><input name="" /></td>
                                <td><input name="" /></td>
                                <td><input name="" /></td>
                                <td><input name="" /></td>
                            </tr>
                        </tbody>
                    </table>

                </div>
            }

        </div>
    </div>

    <div class="modal modal-blur fade" id="modal-new-project" tabindex="-1" role="dialog" aria-hidden="true">
        <div class="modal-dialog modal-lg" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Clonar Proyecto MASTER</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">

                    <div class="row">
                        <div class="col-lg-12">
                            <div class="mb-3">
                                <label class="form-label">Nombre</label>
                                <input id="txtPyNombre" type="text" class="form-control"
                                       name="example-text-input" placeholder="Escribe un Nombre para tu Proyecto">
                            </div>
                        </div>

                        <div class="col-lg-12">
                            <div>
                                <label class="form-label">Describe tu proyecto</label>
                                <textarea id="txtPyDescripcion" class="form-control" rows="8"></textarea>
                            </div>
                        </div>


                    </div>
                </div>

                <div class="modal-footer">
                    <a href="#" class="btn btn-link link-secondary" data-bs-dismiss="modal">
                        Cancelar
                    </a>
                    <a onclick="createProject()" class="btn btn-primary ms-auto">
                        <svg xmlns="http://www.w3.org/2000/svg"
                             class="icon" width="24" height="24"
                             viewBox="0 0 24 24" stroke-width="2"
                             stroke="currentColor"
                             fill="none" stroke-linecap="round" stroke-linejoin="round">
                            <path stroke="none" d="M0 0h24v24H0z" fill="none" />
                            <line x1="12" y1="5" x2="12" y2="19" />
                            <line x1="5" y1="12" x2="19" y2="12" />
                        </svg>
                        Clonar
                    </a>
                </div>
            </div>
        </div>
    </div>

    <!-- (Irrelevant source removed.) -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery.fancytree/2.38.0/jquery.fancytree-all-deps.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery.fancytree/2.38.0/jquery.fancytree.min.js"></script>

</body>

</html>